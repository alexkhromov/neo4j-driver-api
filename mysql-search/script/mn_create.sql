CREATE DATABASE IF NOT EXISTS MN;

USE MN;

CREATE TABLE IF NOT EXISTS CONTROLLER (
    CONTROLLER_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL
); 

CREATE TABLE IF NOT EXISTS LOCATION_AREA (
    LOCATION_AREA_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    CONTROLLER_ID INT NOT NULL,
    NAME VARCHAR(100) NOT NULL,
    CONSTRAINT FK_CONTROLLER FOREIGN KEY (CONTROLLER_ID) REFERENCES CONTROLLER(CONTROLLER_ID)
);  

CREATE TABLE IF NOT EXISTS CELL (
    CELL_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    LOCATION_AREA_ID INT NOT NULL,
    NAME VARCHAR(100) NOT NULL,
    CONSTRAINT FK_LOCATION_AREA FOREIGN KEY (LOCATION_AREA_ID) REFERENCES LOCATION_AREA(LOCATION_AREA_ID)
); 

CREATE TABLE IF NOT EXISTS SECTOR (
    SECTOR_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    CELL_ID INT NOT NULL,
    NAME VARCHAR(100) NOT NULL,
    TYPE VARCHAR(100) NOT NULL,
    AZIMUTH VARCHAR(100) NOT NULL,
    CONSTRAINT FK_CELL FOREIGN KEY (CELL_ID) REFERENCES CELL(CELL_ID)
);

DROP PROCEDURE IF EXISTS insert_test_data;

DELIMITER #
CREATE PROCEDURE insert_test_data()
BEGIN
    DECLARE CONTROLLER_COUNT INT UNSIGNED DEFAULT 10;
    DECLARE CONTROLLER_COUNT_CURRENT INT UNSIGNED DEFAULT 1;
    DECLARE LAST_CONTROLLER_ID INT UNSIGNED;
    DECLARE LOCATION_AREA_COUNT INT UNSIGNED DEFAULT 5;
    DECLARE LOCATION_AREA_COUNT_CURRENT INT UNSIGNED DEFAULT 1;
    DECLARE LAST_LOCATION_AREA_ID INT UNSIGNED;
    DECLARE CELL_COUNT INT UNSIGNED DEFAULT 1700;
    DECLARE CELL_COUNT_CURRENT INT UNSIGNED DEFAULT 1;
    DECLARE LAST_CELL_ID INT UNSIGNED;
    DECLARE SECTOR_COUNT INT UNSIGNED DEFAULT 12;
    DECLARE SECTOR_COUNT_CURRENT INT UNSIGNED DEFAULT 1;
    DECLARE TYPE VARCHAR(100) DEFAULT "";
    DECLARE AZIMUTH VARCHAR(100) DEFAULT "";

    SET FOREIGN_KEY_CHECKS = 0;
    TRUNCATE TABLE SECTOR;
    TRUNCATE TABLE CELL;
    TRUNCATE TABLE LOCATION_AREA;
    TRUNCATE TABLE CONTROLLER;
    SET FOREIGN_KEY_CHECKS = 1;

    WHILE CONTROLLER_COUNT_CURRENT <= CONTROLLER_COUNT DO
        START TRANSACTION;
        INSERT INTO CONTROLLER (NAME ) VALUES (CONCAT('MSC', CONTROLLER_COUNT_CURRENT));
        SET CONTROLLER_COUNT_CURRENT = CONTROLLER_COUNT_CURRENT + 1;
        SET LAST_CONTROLLER_ID = LAST_INSERT_ID();
        WHILE LOCATION_AREA_COUNT_CURRENT <= LOCATION_AREA_COUNT DO
            INSERT INTO LOCATION_AREA (CONTROLLER_ID, NAME) VALUES
            (LAST_CONTROLLER_ID, CONCAT('LA', LOCATION_AREA_COUNT_CURRENT));
            SET LOCATION_AREA_COUNT_CURRENT = LOCATION_AREA_COUNT_CURRENT + 1;
            SET LAST_LOCATION_AREA_ID = LAST_INSERT_ID();
            WHILE CELL_COUNT_CURRENT <= CELL_COUNT DO
                INSERT INTO CELL (LOCATION_AREA_ID, NAME) VALUES
                (LAST_LOCATION_AREA_ID, CONCAT('Cell', CELL_COUNT_CURRENT));
                SET CELL_COUNT_CURRENT = CELL_COUNT_CURRENT + 1;
                SET LAST_CELL_ID = LAST_INSERT_ID();
                WHILE SECTOR_COUNT_CURRENT <= SECTOR_COUNT DO
                    SET TYPE = IF(SECTOR_COUNT_CURRENT >= 1 AND SECTOR_COUNT_CURRENT <= 4, '2G',
                                  IF(SECTOR_COUNT_CURRENT >= 5 AND SECTOR_COUNT_CURRENT <= 8, '3G', '4G'));
                    SET AZIMUTH = IF(SECTOR_COUNT_CURRENT % 4 = 1, '0',
                                     IF(SECTOR_COUNT_CURRENT % 4 = 2, '90',
                                        IF(SECTOR_COUNT_CURRENT % 4 = 3, '180', '270')));
                    INSERT INTO SECTOR (CELL_ID, NAME, TYPE, AZIMUTH)
                    VALUES (LAST_CELL_ID, CONCAT('Sector', SECTOR_COUNT_CURRENT), TYPE, AZIMUTH);
                    SET SECTOR_COUNT_CURRENT = SECTOR_COUNT_CURRENT + 1;
                END WHILE;
                SET SECTOR_COUNT_CURRENT = 1;
            END WHILE;
            SET CELL_COUNT_CURRENT = 1;
        END WHILE;
        SET LOCATION_AREA_COUNT_CURRENT = 1;
        COMMIT;
    END WHILE;
END #

CALL insert_test_data();

DROP PROCEDURE IF EXISTS insert_test_data;